#!/bin/bash
echo -e "\e[0;33mWah Package-Manager\e[0m"
INFO(){
	echo -e "\e[0;32mINFO: \e[0;37m$1\e[0m"
}
WARN(){
	echo -e "\e[1;33mWARN: \e[0;37m$1\e[0m"
}
ERROR(){
	echo -e "\e[0;31mERROR: \e[1;37m$1,\e[0;31m Aborting...\e[0m"
	exit $2
}

helpArray=()
HELP(){
	helpArray+=("\e[0;32m$1" "|" "\e[0;37m$2\e[0m")
}

PRINTHELP(){
	for cmdhelp in "${helpArray[@]}"; do
		echo -e "$cmdhelp"
	done | paste - - - | column -t -s "|"
}

if [ -f /etc/wpm.conf ]; then
	source /etc/wpm.conf
else
	if [ -f $HOME/.config/wpm.conf ]; then
		source $HOME/.config/wpm.conf
	else
		ERROR "Configuration not found" 1
	fi
fi

pkgsver=()
pkgsvercode=()
pkgsfiles=()
loadvercodes(){
	pkgsvercode=()
	for pkg in "${pkgs[@]}"; do
		pkgsvercode+=($(zcat $dbdir/repo.db | grep $pkg -A2 | tail -n 1))
	done
}
if [ -f "$dbdir/$reponame.db" ]; then
	pkgs=($(zcat "$dbdir/$reponame.db" | grep PKG: -A1 | cut -f3 -d ':' | grep -v \\--))
	for pkg in "${pkgs[@]}"; do
		pkgsver+=($(zcat $dbdir/repo.db | grep $pkg -A1 | tail -n 1))
		pkgsfiles+=($(zcat $dbdir/repo.db | grep $pkg -A3 | grep "file:" -A1 | tail -n 1))
	done
	loadvercodes
else
	pkgs=()
fi

if ! [ -d $pkgsdir ]; then
	mkdir -p $pkgsdir
	WARN "The installed packages directory does not exist, creating it..."
fi

inspkgs=($(basename -a $pkgsdir/* | cut -f1 -d'*'))
inspkgsver=()
for pkg in "${inspkgs[@]}"; do
	source $pkgsdir/$pkg
	inspkgsver+=("$localver")
done

inspkgsvercode=()
for pkg in "${inspkgs[@]}"; do
	source $pkgsdir/$pkg
	inspkgsvercode+=("$localvercode")
done

findpkg=false
deps=("")

if ! [ "$1" = "" ]; then
	case "$1" in
		"install")
			if [ "$2" = "" ]; then
				ERROR "You need to specify a package" 3
			else
				for pkg in "${pkgs[@]}"; do
					if [ "$2" = "$pkg" ]; then
						findpkg=true
						break
					fi
				done
				if [ $findpkg = true ]; then
					if ! [ -f "$pkgsdir/$pkg" ]; then
						for (( i=0; i<${#pkgs[@]}; i++ )); do
							if [[ "${pkgs[i]}" = "$2" ]]; then
								if ! [ -d $pkgsdldir ]; then
									WARN "The download packages directory does not exist, creating it."
									mkdir -p $pkgsdldir
								fi
								cd $pkgsdldir
								INFO "Downloading $reponame/$2..."
								wget "$repo/${pkgsfiles[i]}" -q --show-progress -O ${pkgsfiles[i]}
								INFO "Installing $2..."
								tar -zxvf ${pkgsfiles[i]} -C $rootdir
								mv $rootdir/.pkginfo $pkgsdir/$pkg
								echo "reason=1" >> $pkgsdir/$pkg
								break
							fi
						done
					else
						WARN "$2 is already installed."
					fi
				else
					ERROR "Package $2 not found"
				fi
			fi
		;;
		"remove")
			echo desinstalando
		;;
		"sync")
			INFO "Syncing."
			if ! [ -d $dbdir ]; then
				WARN "The data base directory does not exist, creating it."
				mkdir -p $dbdir
			fi
			cd $dbdir
			wget $repo/$reponame.db -q --show-progress -O $reponame.db

			loadvercodes
			updated=true

			for pkg in "${pkgs[@]}"; do
				for inspkg in "${inspkgs[@]}"; do
					if [ "$pkg" = "$inspkg" ]; then
						for (( i=0; i<${#pkgs[@]}; i++ )); do
							if [[ "${pkgs[i]}" = "$inspkg" ]]; then
								if [ "${pkgsvercode[i]}" -gt "${inspkgsvercode[i]}" ]; then
									WARN "${pkgs[i]} it's outdated, ${inspkgsver[i]} -> ${pkgsver[i]}"
									updated=false
								fi
								break
							fi
						done
					fi
				done
			done

			if [ $updated = true ]; then
				INFO "All is updated."
			else
				WARN "Use \"$(basename $0) upgrade\" to upgrade."
			fi
		;;
		"upgrade")
			echo actualizando
		;;
		"help")
			INFO "Use: $(basename $0) [Option] <argument>"
			HELP "[Option] <argument>" "Description:"
			HELP "install  <pkg>     " "Install packages."
			HELP "remove   <pkg>     " "Remove packages."
			HELP "sync               " "Synchronize repositories."
			HELP "upgrade            " "Upgrade packages."
			HELP "help               " "Show this message."
			PRINTHELP
		;;
		*)
			ERROR "Unknow option" 2
		;;
	esac
else
	WARN "For help, type \"$(basename $0) help\" for help"
fi
